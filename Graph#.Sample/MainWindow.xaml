<rb:RibbonWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:sys="clr-namespace:System;assembly=mscorlib"
                 xmlns:rb="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
                 xmlns:ViewModel="clr-namespace:GraphSharp.Sample.ViewModel"
                 xmlns:Sample="clr-namespace:GraphSharp.Sample"
                 xmlns:Controls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
                 xmlns:Converters="clr-namespace:GraphSharp.Sample.Converters"
                 xmlns:zoom="clr-namespace:GraphSharp.Controls.Zoom;assembly=GraphSharp.Controls"
                 x:Class="GraphSharp.Sample.MainWindow" Title="Graph layout PoC" Background="White"
                 WindowStartupLocation="CenterScreen" WindowState="Maximized" x:Name="root">
    <rb:RibbonWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/LayoutParameterTemplates.xaml" />
                <ResourceDictionary Source="Resources/PocGraphDataTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Converters:IntegerToDoubleConverter x:Key="doubleIntConverter" />

            <ObjectDataProvider
				x:Key="algorithmConstraintEnum" MethodName="GetValues"
				ObjectType="{x:Type sys:Enum}"
                                >
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Controls:AlgorithmConstraints" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <!--Ribbon Commands-->
            <rb:RibbonCommand x:Key="ExitRCmd"
				LabelTitle="Exit"
				SmallImageSource="{StaticResource Horizon_Image_Delete}"
				LargeImageSource="{StaticResource Horizon_Image_Delete}" />

            <DataTemplate x:Key="GraphItemTemplate">
                <Label FontSize="18" FontWeight="Bold" Margin="5,5,5,5" Content="{Binding Path=Name, Mode=OneWay, FallbackValue=NoName}">
                    <Label.Background>
                        <SolidColorBrush Color="{DynamicResource MainColor}"/>
                    </Label.Background>
                </Label>
            </DataTemplate>
        </ResourceDictionary>
    </rb:RibbonWindow.Resources>
    
    <rb:RibbonWindow.CommandBindings>
        <CommandBinding Command="{StaticResource ExitRCmd}" Executed="OnExecuteExit" />
    </rb:RibbonWindow.CommandBindings>

    <DockPanel LastChildFill="True">

        <rb:Ribbon DockPanel.Dock="Top">
            <rb:Ribbon.ApplicationMenu>
                <rb:RibbonApplicationMenu>
                    <rb:RibbonApplicationMenuItem Command="{Binding OpenGraphsCommand}" />
                    <rb:RibbonApplicationMenuItem Command="{Binding SaveGraphsCommand}" />
                    <rb:RibbonSeparator />
                    <rb:RibbonApplicationMenuItem Command="{StaticResource ExitRCmd}" />
                </rb:RibbonApplicationMenu>
            </rb:Ribbon.ApplicationMenu>

            <rb:RibbonTab Label="General">
                <rb:RibbonGroup>
                    <rb:RibbonGroup.Command>
                        <rb:RibbonCommand LabelTitle="Project" />
                    </rb:RibbonGroup.Command>

                    <rb:RibbonButton Command="{Binding OpenGraphsCommand}" />
                    <rb:RibbonButton Command="{Binding SaveGraphsCommand}" />
                </rb:RibbonGroup>

                <rb:RibbonGroup>
                    <rb:RibbonGroup.Command>
                        <rb:RibbonCommand LabelTitle="Layout" />
                    </rb:RibbonGroup.Command>

                    <rb:RibbonButton Command="{Binding RelayoutCommand}" />
                    <rb:RibbonButton Command="{Binding ContinueLayoutCommand}" />
                </rb:RibbonGroup>
                <rb:RibbonGroup>
                    <rb:RibbonGroup.Command>
                        <rb:RibbonCommand LabelTitle="View" />
                    </rb:RibbonGroup.Command>
                    
                    <rb:RibbonLabel>
                        <StackPanel Width="Auto"
							Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{DynamicResource Horizon_Image_Search}" Width="{DynamicResource IconWidth}" Stretch="Uniform" Margin="{DynamicResource IconMargin}" />
                                <TextBlock Text="General zoom" TextWrapping="Wrap" Margin="5,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </StackPanel>
                            <Slider Value="1" Minimum="0.25" Maximum="2" x:Name="zoomSlider" Width="Auto" MinWidth="50" />
                        </StackPanel>
                    </rb:RibbonLabel>
                </rb:RibbonGroup>
                <rb:RibbonGroup>
                    <rb:RibbonGroup.Command>
                        <rb:RibbonCommand LabelTitle="Tests" />
                    </rb:RibbonGroup.Command>

                    <rb:RibbonButton>
                        <rb:RibbonButton.Command>
                            <rb:RibbonCommand LabelTitle="NotificationTest" Executed="OnExecuteNotificationTest" />
                        </rb:RibbonButton.Command>
                    </rb:RibbonButton>

                    <rb:RibbonButton>
                        <rb:RibbonButton.Command>
                            <rb:RibbonCommand LabelTitle="CompoundLayoutTest" Executed="OnExecuteCompoundLayoutTest" />
                        </rb:RibbonButton.Command>
                    </rb:RibbonButton>
                </rb:RibbonGroup>
            </rb:RibbonTab>
        </rb:Ribbon>

        <DockPanel>
            <!--Graph Selector-->
            <ListBox ItemsSource="{Binding Path=GraphModels}"
				SelectedValue="{Binding Path=SelectedGraphModel, Mode=TwoWay}"
				Margin="5"
				DockPanel.Dock="Left" ItemTemplate="{DynamicResource GraphItemTemplate}" MaxWidth="300" MinWidth="150" Width="150" />

            <StackPanel Orientation="Horizontal"
				Margin="0,5,5,5"
				DockPanel.Dock="Top">
                <TextBlock Width="Auto"
					Height="Auto"
					Text="Vertices:"
					TextWrapping="Wrap"
					VerticalAlignment="Center"
					Margin="20,0,10,0" />
                <TextBlock Width="Auto"
					Height="Auto"
					Text="{Binding Path=SelectedGraphModel.Graph.VertexCount}"
					TextWrapping="Wrap"
					VerticalAlignment="Center"
					Margin="0,0,20,0" />
                <TextBlock Width="Auto"
					Height="Auto"
					Text="Edges:"
					TextWrapping="Wrap"
					VerticalAlignment="Center"
					Margin="0,0,10,0" />
                <TextBlock Width="Auto"
					Height="Auto"
					Text="{Binding Path=SelectedGraphModel.Graph.EdgeCount}"
					TextWrapping="Wrap"
					VerticalAlignment="Center" />
            </StackPanel>

            <DockPanel DataContext="{Binding Path=AnalyzedLayouts}">
                <DockPanel.LayoutTransform>
                    <ScaleTransform ScaleX="{Binding Path=Value, ElementName=zoomSlider}"
							ScaleY="{Binding Path=Value, ElementName=zoomSlider}"
							CenterX="0.5"
							CenterY="0.5" />
                </DockPanel.LayoutTransform>

                <Grid DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--State infos-->
                    <StackPanel Grid.Column="0">
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Margin" Value="3"/>
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="3"/>
                                </Style>
                            </Grid.Resources>
                            
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="150" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Layout algorithm"/>
                            <ComboBox Grid.Column="1"
											ItemsSource="{Binding Path=LayoutAlgorithmFactory.AlgorithmTypes, ElementName=graphLayout}"
											SelectedValue="{Binding Path=LayoutAlgorithmType}" />
                            <TextBlock Grid.Row="1" Text="Overlap Removal"/>
                            <ComboBox Grid.Column="1"
											Grid.Row="1"
											ItemsSource="{Binding Source={StaticResource algorithmConstraintEnum}}"
											SelectedValue="{Binding Path=OverlapRemovalConstraint, ElementName=graphLayout}" />
                            <TextBlock Grid.Row="2" Text="Overlap Removal Algorithm"/>
                            <ComboBox Grid.Column="1"
											Grid.Row="2"
											ItemsSource="{Binding Path=OverlapRemovalAlgorithmFactory.AlgorithmTypes, ElementName=graphLayout}"
											SelectedValue="{Binding Path=OverlapRemovalAlgorithmType, ElementName=graphLayout}" />
                            <TextBlock Grid.Row="3" Text="Edge Routing"/>
                            <ComboBox Grid.Column="1"
											Grid.Row="3"
											ItemsSource="{Binding Source={StaticResource algorithmConstraintEnum}}"
											SelectedValue="{Binding Path=EdgeRoutingConstraint, ElementName=graphLayout}" />
                            <TextBlock Grid.Row="4" Text="Edge Routing Algorithm"/>
                            <ComboBox Grid.Column="1"
											Grid.Row="4"
											ItemsSource="{Binding Path=EdgeRoutingAlgorithmFactory.AlgorithmTypes, ElementName=graphLayout}"
											SelectedValue="{Binding Path=EdgeRoutingAlgorithmType, ElementName=graphLayout}" />
                            <TextBlock Grid.Row="5" Grid.Column="0" Text="State"/>
                            <Slider Grid.Column="1"
											Grid.Row="5"
											MinWidth="150"
											Minimum="0"
											Maximum="{Binding Path=StateCount, Converter={StaticResource doubleIntConverter}, ElementName=graphLayout, FallbackValue=0}"
											Value="{Binding Path=StateIndex, Converter={StaticResource doubleIntConverter}, ElementName=graphLayout, FallbackValue=0}"
											TickFrequency="1" />
                            
                            <TextBlock Text="Computation Time"
											Grid.Row="7"
											Grid.Column="0" />
                            <TextBlock Text="{Binding Path=LayoutState.ComputationTime, ElementName=graphLayout}"
											Grid.Row="7"
											Grid.Column="1" />

                            <TextBlock Text="Show all states"
											Grid.Row="8"
											Grid.Column="0" />
                            <CheckBox IsChecked="{Binding Path=ShowAllStates, ElementName=graphLayout}"
											Grid.Row="8"
											Grid.Column="1" />
                        </Grid>
                    </StackPanel>

                    <!--Parameters-->
                    <StackPanel Grid.Column="1"
							Margin="10,0">
                        <StackPanel.Resources>
                            <Style TargetType="GroupBox">
                                <Setter Property="Margin" Value="5"/>
                            </Style>
                        </StackPanel.Resources>

                        <GroupBox Header="Layout algorithm parameters"
										Content="{Binding Path=LayoutParameters, ElementName=graphLayout}" />
                        <GroupBox Header="Overlap removal parameters"
										Content="{Binding Path=OverlapRemovalParameters, ElementName=graphLayout}" />
                        <GroupBox Header="Edge routing parameters"
										Content="{Binding Path=EdgeRoutingParameters, ElementName=graphLayout}" />
                    </StackPanel>

                </Grid>

                <zoom:ZoomControl>
                    <ViewModel:PocGraphLayout x:Name="graphLayout"
											Graph="{Binding Path=Graph}"
											LayoutAlgorithmType="{Binding Path=LayoutAlgorithmType}"
											Sample:LayoutManager.ManagedLayout="True"
											OverlapRemovalAlgorithmType="FSA"
											HighlightAlgorithmType="Simple"/>
                </zoom:ZoomControl>
            </DockPanel>
        </DockPanel>
    </DockPanel>
</rb:RibbonWindow>